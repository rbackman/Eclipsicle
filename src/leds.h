
#pragma once
#include "shared.h"


#define NUM_STRIPS 2


#define LED_PIN_1 2
#define LED_PIN_2 4
#define HALL_EFFECT_PIN 34

#define LEDS_STRIP_1 51
#define LEDS_STRIP_2 131
#define MAX_LEDS_PER_STRIP 200


enum LED_STATE
{
    LED_STATE_IDLE,
    // LED_STATE_GRAVITY_WAVE,
    LED_STATE_RAINBOW,
    LED_STATE_DOUBLE_RAINBOW,
    LED_STATE_SLIDER,
    LED_STATE_RANDOM,
    LED_STATE_POINT_CONTROL,
    LED_STATE_PARTICLES,
    LED_STATE_RANDOM_PARTICLES,
};

static int LED_STATE_COUNT = 7;
// map to state names
const std::map<LED_STATE, String> LED_STATE_NAMES = {
    {LED_STATE_IDLE, "IDLE"},
    // {LED_STATE_DISTANCE_REACTIVE, "DISTANCE_REACTIVE"},
    // {LED_STATE_DISTANCE_REACTIVE_END, "DISTANCE_REACTIVE_END"},
    {LED_STATE_RAINBOW, "RAINBOW"},
    {LED_STATE_DOUBLE_RAINBOW, "DOUBLE_RAINBOW"},
    // {LED_STATE_IMAGE_SCROLL, "IMAGE_SCROLL"},
    {LED_STATE_SLIDER, "SLIDER"},
    {LED_STATE_RANDOM, "RANDOM"},
    {LED_STATE_POINT_CONTROL, "POINT_CONTROL"},
    {LED_STATE_PARTICLES, "PARTICLES"},
    {LED_STATE_RANDOM_PARTICLES, "RANDOM_PARTICLES"}
    // {LED_STATE_IMAGE, "IMAGE"},
    // {LED_STATE_IMAGE_ANIMATED, "IMAGE_ANIMATED"},
    // {LED_STATE_TEST_STROBE, "TEST_STROBE"},
    // {LED_STATE_LIGHT_WORM, "LIGHT_WORM"},
    // {LED_STATE_PULSE_MODE, "PULSE_MODE"},
    // {LED_STATE_RAINBOW_STRIP, "RAINBOW_STRIP"},
    // {LED_STATE_PSYCHEDELIC_TWIST, "PSYCHEDELIC_TWIST"},
};

ByteRow base64Decode(uint8_t *input, int len);
void decodeRLE(ByteRow encodedData, LedRow &dest);
String getLedStateName(LED_STATE state);
